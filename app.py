"""
-------------------------------------------------
   @File Name:     app.py
   @Author:        Siplusplusov (KIRISHIKI TEAM)
   @Date:          2023/11/16
   @Description: Streamlit app file
-------------------------------------------------
"""

from pathlib import Path
from typing import Any

from PIL import Image
import streamlit as st

import config
from ultralytics import YOLO
from utils import load_model, infer_uploaded_image, infer_uploaded_video, infer_uploaded_webcam

# setting page layout
st.set_page_config(
    page_title="–†–∞—Å–ø–æ–∑–Ω–≤–∞–Ω–∏–µ –æ—Ä—É–∂–∏—è –æ—Ç KIRISHIKI",
    page_icon="üî´",
    layout="wide",
    initial_sidebar_state="expanded"
    )

# main page heading
st.title("–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –æ—Ä—É–∂–∏—è –æ—Ç KIRISHIKI")

# sidebar
st.sidebar.header("‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ–ª–∏")

# model options
task_type = st.sidebar.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ",
    ["–î–µ—Ç–µ–∫—Ü–∏—è","–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è"],
)

model_type = None
if task_type == "–î–µ—Ç–µ–∫—Ü–∏—è":
    model_type = st.sidebar.selectbox(
        "–ú–æ–¥–µ–ª—å",
        config.DETECTION_MODEL_LIST
    )
elif task_type == "–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è":
    model_type = st.sidebar.selectbox(
        "–ú–æ–¥–µ–ª—å",
        config.SEGMENT_MODEL_LIST
    )
else:
    st.error("üòî–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏—è –î–ï–¢–ï–ö–¶–ò–ò –¥–æ—Å—Ç—É–ø–Ω–∞")

confidence = float(st.sidebar.slider(
    "üìå–¢–æ—á–Ω–æ—Å—Ç—å", 30, 100, 50)) / 100

model_path = ""
if model_type:

    if task_type == "–î–µ—Ç–µ–∫—Ü–∏—è":
        model_path = Path(config.DETECTION_MODEL_DIR, str(model_type))
    if task_type == "–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è":
        model_path = Path(config.SEGMENT_MODEL_DIR, str(model_type))
else:
    st.error("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –≤ –º–µ–Ω—é")

model = load_model(model_path)

# load pretrained DL model
try:
    model = load_model(model_path)
except Exception as e:
    st.error(f"–ß—Ç–æ-—Ç–æ –ø–æ–ª–æ–º–∞–ª–æ—Å—å, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –º–æ–¥–µ–ª—å—é: {model_path}")

# image/video options
st.sidebar.header("üì•–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
source_selectbox = st.sidebar.selectbox(
    "–ò—Å—Ç–æ—á–Ω–∏–∫",
    config.SOURCES_LIST
)

source_img = None
if source_selectbox == config.SOURCES_LIST[0]: # Image
    infer_uploaded_image(confidence, model)
elif source_selectbox == config.SOURCES_LIST[1]: # Video
    infer_uploaded_video(confidence, model)
elif source_selectbox == config.SOURCES_LIST[2]: # Webcam
    infer_uploaded_webcam(confidence, model)
else:
    st.error("Currently only 'Image' and 'Video' source are implemented")